;; Analyzed by ClojureScript 1.8.41
{:use-macros nil, :excludes #{}, :name clack.core, :imports nil, :requires {nodejs cljs.nodejs, cljs.nodejs cljs.nodejs, cljs.pprint cljs.pprint, cljs.tools.reader cljs.tools.reader, cljs.js cljs.js}, :uses {pprint cljs.pprint, eval cljs.js, empty-state cljs.js, read-string cljs.tools.reader, js-eval cljs.js}, :defs {looks-like-keyword? {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 38, :column 7, :end-line 38, :end-column 26, :arglists (quote ([s]))}, :name clack.core/looks-like-keyword?, :variadic false, :file "src/clack/core.cljs", :end-column 26, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, allowed-opts {:name clack.core/allowed-opts, :file "src/clack/core.cljs", :line 26, :column 1, :end-line 26, :end-column 18, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 26, :column 6, :end-line 26, :end-column 18}}, slurp-stdin {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 87, :column 7, :end-line 87, :end-column 18, :arglists (quote ([]))}, :name clack.core/slurp-stdin, :variadic false, :file "src/clack/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, -main {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 104, :column 7, :end-line 104, :end-column 12, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name clack.core/-main, :variadic true, :file "src/clack/core.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, short-opts {:name clack.core/short-opts, :file "src/clack/core.cljs", :line 32, :column 1, :end-line 32, :end-column 16, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 32, :column 6, :end-line 32, :end-column 16}}, eval* {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 15, :column 7, :end-line 15, :end-column 12, :arglists (quote ([s])), :doc "evaluate string"}, :name clack.core/eval*, :variadic false, :file "src/clack/core.cljs", :end-column 12, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "evaluate string"}, search {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 72, :column 7, :end-line 72, :end-column 13, :arglists (quote ([data [[qtype qval :as query] & queries]]))}, :name clack.core/search, :variadic false, :file "src/clack/core.cljs", :end-column 13, :method-params ([data p__62]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data [[qtype qval :as query] & queries]]))}, get-query {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 47, :column 7, :end-line 47, :end-column 16, :arglists (quote ([args] [[arg & args] query])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([args] [[arg & args] query]), :arglists ([args] [[arg & args] query]), :arglists-meta (nil nil)}}, :name clack.core/get-query, :variadic false, :file "src/clack/core.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([args] [[arg & args] query]), :arglists ([args] [[arg & args] query]), :arglists-meta (nil nil)}, :method-params ([args] [[arg & args] query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists ([args] [[arg & args] query])}, looks-like-number? {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 44, :column 7, :end-line 44, :end-column 25, :arglists (quote ([s]))}, :name clack.core/looks-like-number?, :variadic false, :file "src/clack/core.cljs", :end-column 25, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, looks-like-string? {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 41, :column 7, :end-line 41, :end-column 25, :arglists (quote ([s]))}, :name clack.core/looks-like-string?, :variadic false, :file "src/clack/core.cljs", :end-column 25, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, long-opts {:name clack.core/long-opts, :file "src/clack/core.cljs", :line 33, :column 1, :end-line 33, :end-column 15, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 33, :column 6, :end-line 33, :end-column 15}}, error {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 9, :column 7, :end-line 9, :end-column 12, :arglists (quote ([msg])), :doc "log error and exit with error code"}, :name clack.core/error, :variadic false, :file "src/clack/core.cljs", :end-column 12, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg])), :doc "log error and exit with error code"}}, :require-macros {cljs.pprint cljs.pprint, cljs.js cljs.js}, :cljs.analyzer/constants {:seen #{:remove :get :default :value :filter :expr :source-map :context :eval}, :order [:eval :source-map :context :expr :filter :remove :get :value :default]}, :doc nil}