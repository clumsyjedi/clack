{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name clack.core, :imports nil, :requires {nodejs cljs.nodejs, cljs.nodejs cljs.nodejs, cljs.tools.reader cljs.tools.reader, cljs.pprint cljs.pprint, clack.util clack.util, parser clack.parser, clack.parser clack.parser, serializer clack.serializer, clack.serializer clack.serializer}, :uses {pprint cljs.pprint, input-format clack.util, output-format clack.util, eval* clack.util, read-string cljs.tools.reader, error clack.util}, :defs {looks-like-keyword? {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 33, :column 7, :end-line 33, :end-column 26, :arglists (quote ([s]))}, :name clack.core/looks-like-keyword?, :variadic false, :file "src/clack/core.cljs", :end-column 26, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, meta-opts {:name clack.core/meta-opts, :file "src/clack/core.cljs", :line 29, :column 1, :end-line 29, :end-column 15, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 29, :column 6, :end-line 29, :end-column 15}}, allowed-opts {:name clack.core/allowed-opts, :file "src/clack/core.cljs", :line 11, :column 1, :end-line 11, :end-column 18, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 11, :column 6, :end-line 11, :end-column 18}}, slurp-stdin {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 98, :column 7, :end-line 98, :end-column 18, :arglists (quote ([]))}, :name clack.core/slurp-stdin, :variadic false, :file "src/clack/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, -main {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 107, :column 7, :end-line 107, :end-column 12, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name clack.core/-main, :variadic true, :file "src/clack/core.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, apply-query {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 92, :column 7, :end-line 92, :end-column 18, :arglists (quote ([query entities]))}, :name clack.core/apply-query, :variadic false, :file "src/clack/core.cljs", :end-column 18, :method-params ([query entities]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 2, :fn-var true, :arglists (quote ([query entities]))}, search {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 74, :column 7, :end-line 74, :end-column 13, :arglists (quote ([data [[qtype qval :as query] & queries]]))}, :name clack.core/search, :variadic false, :file "src/clack/core.cljs", :end-column 13, :method-params ([data p__15465]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data [[qtype qval :as query] & queries]]))}, get-query {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 42, :column 7, :end-line 42, :end-column 16, :arglists (quote ([args] [[arg & args] query])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([args] [[arg & args] query]), :arglists ([args] [[arg & args] query]), :arglists-meta (nil nil)}}, :name clack.core/get-query, :variadic false, :file "src/clack/core.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([args] [[arg & args] query]), :arglists ([args] [[arg & args] query]), :arglists-meta (nil nil)}, :method-params ([args] [[arg & args] query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists ([args] [[arg & args] query])}, looks-like-number? {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 39, :column 7, :end-line 39, :end-column 25, :arglists (quote ([s]))}, :name clack.core/looks-like-number?, :variadic false, :file "src/clack/core.cljs", :end-column 25, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, looks-like-string? {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 36, :column 7, :end-line 36, :end-column 25, :arglists (quote ([s]))}, :name clack.core/looks-like-string?, :variadic false, :file "src/clack/core.cljs", :end-column 25, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, search-opts {:name clack.core/search-opts, :file "src/clack/core.cljs", :line 22, :column 1, :end-line 22, :end-column 17, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 22, :column 6, :end-line 22, :end-column 17}}, meta-opt-keys {:name clack.core/meta-opt-keys, :file "src/clack/core.cljs", :line 19, :column 1, :end-line 19, :end-column 19, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 19, :column 6, :end-line 19, :end-column 19}}}, :require-macros {cljs.pprint cljs.pprint}, :cljs.analyzer/constants {:seen #{:remove :get :meta :input-format :default :value :output-format :search :filter :map :eval}, :order [:input-format :output-format :map :filter :remove :get :eval :meta :search :value :default]}, :doc nil}