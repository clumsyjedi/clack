;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name clack.core, :imports nil, :requires {nodejs cljs.nodejs, cljs.nodejs cljs.nodejs, cljs.pprint cljs.pprint, clack.util clack.util}, :uses {pprint cljs.pprint, write-output clack.util, eval* clack.util, read-input clack.util, error clack.util}, :defs {looks-like-keyword? {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 27, :column 7, :end-line 27, :end-column 26, :arglists (quote ([s]))}, :name clack.core/looks-like-keyword?, :variadic false, :file "src/clack/core.cljs", :end-column 26, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, meta-opts {:name clack.core/meta-opts, :file "src/clack/core.cljs", :line 23, :column 1, :end-line 23, :end-column 15, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 23, :column 6, :end-line 23, :end-column 15}}, allowed-opts {:name clack.core/allowed-opts, :file "src/clack/core.cljs", :line 7, :column 1, :end-line 7, :end-column 18, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 7, :column 6, :end-line 7, :end-column 18}}, slurp-stdin {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 92, :column 7, :end-line 92, :end-column 18, :arglists (quote ([]))}, :name clack.core/slurp-stdin, :variadic false, :file "src/clack/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, -main {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 105, :column 7, :end-line 105, :end-column 12, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name clack.core/-main, :variadic true, :file "src/clack/core.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, search {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 68, :column 7, :end-line 68, :end-column 13, :arglists (quote ([data [[qtype qval :as query] & queries]]))}, :name clack.core/search, :variadic false, :file "src/clack/core.cljs", :end-column 13, :method-params ([data p__16653]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data [[qtype qval :as query] & queries]]))}, get-query {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 36, :column 7, :end-line 36, :end-column 16, :arglists (quote ([args] [[arg & args] query])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([args] [[arg & args] query]), :arglists ([args] [[arg & args] query]), :arglists-meta (nil nil)}}, :name clack.core/get-query, :variadic false, :file "src/clack/core.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([args] [[arg & args] query]), :arglists ([args] [[arg & args] query]), :arglists-meta (nil nil)}, :method-params ([args] [[arg & args] query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists ([args] [[arg & args] query])}, looks-like-number? {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 33, :column 7, :end-line 33, :end-column 25, :arglists (quote ([s]))}, :name clack.core/looks-like-number?, :variadic false, :file "src/clack/core.cljs", :end-column 25, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, looks-like-string? {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 30, :column 7, :end-line 30, :end-column 25, :arglists (quote ([s]))}, :name clack.core/looks-like-string?, :variadic false, :file "src/clack/core.cljs", :end-column 25, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, handle-input {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 84, :column 7, :end-line 84, :end-column 19, :arglists (quote ([input query meta]))}, :name clack.core/handle-input, :variadic false, :file "src/clack/core.cljs", :end-column 19, :method-params ([input query meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 3, :fn-var true, :arglists (quote ([input query meta]))}, search-opts {:name clack.core/search-opts, :file "src/clack/core.cljs", :line 16, :column 1, :end-line 16, :end-column 17, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 16, :column 6, :end-line 16, :end-column 17}}, meta-opt-keys {:name clack.core/meta-opt-keys, :file "src/clack/core.cljs", :line 13, :column 1, :end-line 13, :end-column 19, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/core.cljs", :line 13, :column 6, :end-line 13, :end-column 19}}}, :require-macros {cljs.pprint cljs.pprint}, :cljs.analyzer/constants {:seen #{:remove :get :meta :input-format :default :value :output-format :search :filter :edn :eval}, :order [:input-format :output-format :filter :remove :get :eval :meta :search :edn :value :default]}, :doc nil}