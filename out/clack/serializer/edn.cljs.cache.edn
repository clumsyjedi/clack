{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name clack.serializer.edn, :imports nil, :requires {clack.serializer.protocol clack.serializer.protocol, cljs.tools.reader cljs.tools.reader, cljs.pprint cljs.pprint, s clojure.string, clojure.string clojure.string}, :uses {pprint cljs.pprint, ISerializer clack.serializer.protocol, read-string cljs.tools.reader}, :defs {EdnSerializer {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection clack.serializer.protocol/ISerializer cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name clack.serializer.edn/EdnSerializer, :file "/Users/clumsyjedi/workspace/clack/src/clack/serializer/edn.cljs", :end-column 25, :type true, :column 12, :internal-ctor true, :line 7, :record true, :end-line 7, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->EdnSerializer {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/serializer/edn.cljs", :line 7, :column 12, :end-line 7, :end-column 25, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name clack.serializer.edn/->EdnSerializer, :variadic false, :file "/Users/clumsyjedi/workspace/clack/src/clack/serializer/edn.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, map->EdnSerializer {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/serializer/edn.cljs", :line 7, :column 12, :end-line 7, :end-column 25, :internal-ctor true, :factory :map, :arglists (quote ([G__15408]))}, :name clack.serializer.edn/map->EdnSerializer, :variadic false, :file "/Users/clumsyjedi/workspace/clack/src/clack/serializer/edn.cljs", :end-column 25, :method-params ([G__15408]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__15408]))}, serializer {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/serializer/edn.cljs", :line 12, :column 7, :end-line 12, :end-column 17, :arglists (quote ([]))}, :name clack.serializer.edn/serializer, :variadic false, :file "/Users/clumsyjedi/workspace/clack/src/clack/serializer/edn.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.pprint cljs.pprint}, :doc nil}