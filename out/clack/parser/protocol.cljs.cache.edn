{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name clack.parser.protocol, :imports nil, :requires nil, :uses nil, :defs {IParser {:meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/parser/protocol.cljs", :line 3, :column 14, :end-line 3, :end-column 21, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {handle-input [[this stream complete-fn keywordize?]]}}}, :protocol-symbol true, :name clack.parser.protocol/IParser, :file "src/clack/parser/protocol.cljs", :end-column 21, :column 1, :line 3, :protocol-info {:methods {handle-input [[this stream complete-fn keywordize?]]}}, :info nil, :end-line 3, :impls #{}, :doc nil, :jsdoc ("@interface")}, handle-input {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/parser/protocol.cljs", :line 4, :column 4, :end-line 4, :end-column 16, :protocol clack.parser.protocol/IParser, :doc nil, :arglists (quote ([this stream complete-fn keywordize?]))}, :protocol clack.parser.protocol/IParser, :name clack.parser.protocol/handle-input, :variadic false, :file "src/clack/parser/protocol.cljs", :end-column 16, :method-params ([this stream complete-fn keywordize?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 4, :max-fixed-arity 4, :fn-var true, :arglists (quote ([this stream complete-fn keywordize?])), :doc nil}}, :require-macros nil, :doc nil}