{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name clack.parser.transit, :imports nil, :requires {clack.parser.protocol clack.parser.protocol, transit cognitect.transit, cognitect.transit cognitect.transit}, :uses {IParser clack.parser.protocol}, :defs {TransitParser {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable clack.parser.protocol/IParser cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name clack.parser.transit/TransitParser, :file "src/clack/parser/transit.cljs", :end-column 25, :type true, :column 12, :internal-ctor true, :line 6, :record true, :end-line 6, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->TransitParser {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/parser/transit.cljs", :line 6, :column 12, :end-line 6, :end-column 25, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name clack.parser.transit/->TransitParser, :variadic false, :file "src/clack/parser/transit.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 6, :end-line 6, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, map->TransitParser {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/parser/transit.cljs", :line 6, :column 12, :end-line 6, :end-column 25, :internal-ctor true, :factory :map, :arglists (quote ([G__14860]))}, :name clack.parser.transit/map->TransitParser, :variadic false, :file "src/clack/parser/transit.cljs", :end-column 25, :method-params ([G__14860]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__14860]))}, parser {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/parser/transit.cljs", :line 17, :column 7, :end-line 17, :end-column 13, :arglists (quote ([]))}, :name clack.parser.transit/parser, :variadic false, :file "src/clack/parser/transit.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:json}, :order [:json]}, :doc nil}