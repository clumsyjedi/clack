{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name clack.serializer, :imports nil, :requires {json clack.serializer.json, clack.serializer.string clack.serializer.string, clack.serializer.transit clack.serializer.transit, clack.serializer.edn clack.serializer.edn, string clack.serializer.string, yaml clack.serializer.yaml, clack.serializer.json clack.serializer.json, clack.serializer.yaml clack.serializer.yaml, transit clack.serializer.transit, clack.serializer.protocol clack.serializer.protocol, edn clack.serializer.edn}, :uses {freeze clack.serializer.protocol}, :defs {serializer {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/serializer.cljs", :line 9, :column 8, :end-line 9, :end-column 18, :private true, :arglists (quote ([input-type]))}, :private true, :name clack.serializer/serializer, :variadic false, :file "/Users/clumsyjedi/workspace/clack/src/clack/serializer.cljs", :end-column 18, :method-params ([input-type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([input-type]))}, serialize {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/src/clack/serializer.cljs", :line 17, :column 7, :end-line 17, :end-column 16, :arglists (quote ([input-type data]))}, :name clack.serializer/serialize, :variadic false, :file "/Users/clumsyjedi/workspace/clack/src/clack/serializer.cljs", :end-column 16, :method-params ([input-type data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([input-type data]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:yaml :str :tjs :json}, :order [:json :str :tjs :yaml]}, :doc nil}