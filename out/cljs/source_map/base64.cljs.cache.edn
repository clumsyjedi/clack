{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name cljs.source-map.base64, :imports nil, :requires nil, :uses nil, :defs {chars64 {:name cljs.source-map.base64/chars64, :file "out/cljs/source_map/base64.cljs", :line 11, :column 1, :end-line 11, :end-column 13, :meta {:file "/Users/clumsyjedi/workspace/clack/out/cljs/source_map/base64.cljs", :line 11, :column 6, :end-line 11, :end-column 13}}, char->int {:name cljs.source-map.base64/char->int, :file "out/cljs/source_map/base64.cljs", :line 12, :column 1, :end-line 12, :end-column 15, :meta {:file "/Users/clumsyjedi/workspace/clack/out/cljs/source_map/base64.cljs", :line 12, :column 6, :end-line 12, :end-column 15}}, int->char {:name cljs.source-map.base64/int->char, :file "out/cljs/source_map/base64.cljs", :line 13, :column 1, :end-line 13, :end-column 15, :meta {:file "/Users/clumsyjedi/workspace/clack/out/cljs/source_map/base64.cljs", :line 13, :column 6, :end-line 13, :end-column 15}}, encode {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/out/cljs/source_map/base64.cljs", :line 15, :column 7, :end-line 15, :end-column 13, :arglists (quote ([n]))}, :name cljs.source-map.base64/encode, :variadic false, :file "out/cljs/source_map/base64.cljs", :end-column 13, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, decode {:protocol-inline nil, :meta {:file "/Users/clumsyjedi/workspace/clack/out/cljs/source_map/base64.cljs", :line 21, :column 7, :end-line 21, :end-column 13, :arglists (quote ([c]))}, :name cljs.source-map.base64/decode, :variadic false, :file "out/cljs/source_map/base64.cljs", :end-column 13, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}}, :require-macros nil, :doc nil}